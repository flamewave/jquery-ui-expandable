Version 1.0 - ??, 2010
 - Initial version. Never released.

Version 1.1 - August 2, 2011
 - Added support for expandable tables, where odd rows are header rows and even rows are content rows that get
   expanded/collapsed when the header row is clicked.
 - Added the "contentSet" event and the setContent() method.
 - Added the "ajax" option and loadContent() method for loading item content from AJAX calls automatically when the
   item is expanded.
 - Added the "contentHtmlElement" parameter to the "expanded" and "collapsed" events to make them more useful.
 - Added support for a jQuery object representing the HTML head element of an item to be passed to the toggle(),
   expand(), and collapse() methods.
 - Added globalization support through the $.ui.expandable.globalization object.
 - Added the ability to disable/enable the widget or individual items.
 - Made many improvements and optimizations to the code.

Version 1.2 - September 15th 2011
 - Updated the events to use namespacing.
 - Added the "refresh" and "count" methods.
 - Added support for "first" and "last" to be passed as a value to the "collapse", "disable", "enable", "isExpanded",
   "loadContent", "setContent", and "toggle" methods "items" parameter.

Version 1.2.1 - October 18th 2011
 - Added the "force" parameter to the "loadContent" method.

Version 1.3 - October 26th 2011
 - Updated all internal references to this.widget() to use this.element instead.
 - Bug fix: when using AJAX loading, items with a default state set to be expanded would not automatically load their
   content.
 - Updated all events to be fired using the _trigger() method of the widget factory. This included moving the
   "failedLoad" event outside of the "ajax" option to be a root-level option/event.
 - Changed the default animation to be "slide up" if it is available, otherwise use the default jQuery animation.
 - Streamlined the animation code for the expandos.
 - Bug fix: made sure items exist before calling methods off of them so that "property undefined" errors would not
   occasionally occur.
 - Added the "noFx" and "reload" parameters to the "setItemStates" method.
 - Added the "noFx" and "reload" parameters to the "toggle" method.
 - Added the "noFx" and "reload" parameters to the "expand" method.
 - Added the "noFx" parameter to the "collapse" method.
 - Added support for string values of the "items" parameter of the "collapse", "disable", "enable", "isExpanded",
   "loadContent", and "toggle" methods.
 - Added support for function values of the "items" parameter of the "collapse", "disable", "enable", "isExpanded",
   "loadContent", "setContent", and "toggle" methods.
 - Added support for function values for the content and object has values of the "setContent" method.
 - Bug fix: when disabling specified items, all items would no longer be able to be expanded or collapsed.
 - Bug fix: when collapsing or expanding items, logic to expand/collapse the item would still be executed even if
   the item was already expanded/collapsed.

Version 1.4 - March 12 2012
 - Added several advanced options to allow fine-tuning the widget: noWidgetClasses, contentElement, contentContainer,
   and iconContainer.
 - Made several code optimizations and enhancements.
 - An exception is no longer thrown when trying to set an option that can only be set on creation, instead a warning
   is written to the JS console.
 - All exceptions thrown now have "ExpandableException: " prefixed to their message.
 - Project renamed to jqAmp UI Expandable so that it is not confused to be associated with the offical jQuery UI
   project.

Version 1.5 - June 27 2012
 - Converted all string literals to be wrapped in " instead of ' where appropiate.
 - Ajax attr option now defaults to "data-ajax-url" instead of "rel".
 - Updated to use the new "prop" function where appropiate. Done in a way where code is still backwards compatible
   with previous versions of jQuery that don't have the "prop" method. This fixes issue #1.
 - Bug fix for issue #2 where toggling the disabled state of individual sections would cause the entire widget to
   be set to a sudo disabled state.
 - Added the isDisabled() method.
 - Bug fix in the destroy() method where sections that were disabled would still have the disabled UI classes
   applied to them.
 - Added support for when the "items" parameter of the collapse(), disable(), enable(), expand(), isExpanded(),
   loadContent(), and toggle() methods is a function, null or undefined can be returned to indicate that all
   sections should be affected.
 - Made some improvements to the demo HTML file.
